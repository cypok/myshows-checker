#!/usr/bin/env ruby

require 'rubygems'
require 'myshows'

def msg(text); puts text end
def err(text); puts "Error: #{text}" end

def parse_filename(filename)
  sep = /[. _]/

  # Foo.s01.e01{.e02}....
  filename =~ /^(.*)#{sep}s(\d{1,2})#{sep}?e(\d{1,2})(?:#{sep}?e(\d{1,2}))?#{sep}/i or
  # Foo - 1x01{-02} ...
  filename =~ /^(.*)#{sep}-#{sep}(\d{1,2})x(\d{1,2})(?:-(\d{1,2}))?#{sep}/i or
  # Foo_02_...
  filename =~ /^(.*)#{sep}()(\d{1,2})#{sep}/i or
  raise "unrecognized series filename \"#{filename}\""

  name = $1
  season = $2
  episodes = [$3, $4]
  [
    name.gsub(sep, ' '),
    season.empty? ? 1 : season.to_i,
    episodes.reject(&:nil?).map(&:to_i)
  ]
end

def check(episode)
  episode.check!
  msg "Checked #{episode}"
end

begin
  f = File.open(File.expand_path('~/.myshows'), 'r')
  profile = MyShows::Profile.new f.gets.strip, f.gets.strip
  f.close

  search = MyShows::Search.new
rescue Exception => e
  err e.message
  exit 1
end

ARGV.each do |path|
  begin
    file = File.basename(path)
    episodes = search.episodes_by_filename(file)
    unless true #episodes.empty?
      episodes.each { |ep| check ep }
    else
      show_title, season_num, episodes_num = parse_filename(file)
      show = profile.show(show_title)
      episodes_num.each do |episode_num|
        check show.episode(season_num, episode_num)
      end
    end
  rescue Exception => e
    err e.message
    next
  end
end

